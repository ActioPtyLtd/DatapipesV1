include "jcu_localenv.conf"

script {
  schema {},
  tasks {
    read-modules {
      type = "extract",
      behavior = "",
      dataSource = ${jcu_ds},
      dataSource {
        query {
          queryTemplate = "",
          read = "select distinct "${jcu_ds.sql_limit_return_result}" moduleid from "${jcu_ds.sql_default_jcu_table}" where PresenterUsername is not null "${jcu_ds.sql_extra_where_clause}
        }
      }
    },
    read_module_owner {
      type = "extract",
      behavior = "",
      dataSource = ${jcu_ds},
      dataSource {
        query {
          queryTemplate = "",
          read = "select distinct "${jcu_ds.sql_limit_return_result}"  moduleid,presenterusername from "${jcu_ds.sql_default_jcu_table}" where PresenterUsername is not null "${jcu_ds.sql_extra_where_clause}" order  by moduleid"
        }
      }
    },
    dumpthis {
      type = "dump"
    },
    module-templates {
      type = "mergeTemplate",
      templates {
        createmodule = "{ \"ModuleId\": \"$moduleid\", \"Name\": \"$moduleid\", \"Description\": \"$moduleid\", \"Owner\": \"MediasiteAdmin\"}",
        createfolder = "{ \"Name\": \"$moduleid\", \"Owner\": \"MediasiteAdmin\", \"ParentFolderId\": \""${parent_dir_uuid}"\", \"Recycled\": false, \"Type\": \"Folder\", \"IsShared\": false, \"IsCopyDestination\": true, \"IsReviewEditApproveEnabled\": false }"
      }
    },
    create-module {
      type = "lookup",
      behavior = "simple",
      dataSource = ${mediasite_ds},
      dataSource {
        query {
          read {
            verb = "post",
            uri = ${mediasite_ds.url}"/Modules",
            body = "createmodule"
          }
        }
      }
    },
    create-folder {
      type = "lookup",
      behavior = "simple",
      dataSource = ${mediasite_ds},
      dataSource {
        query {
          read {
            verb = "post",
            uri = ${mediasite_ds.url}"/Folders",
            body = "createfolder"
          }
        }
      }
    },
    load_folder_uuid {
      type = "join",
      iterateR = "ds => ds.value",
      keyL = ${parent_dir_uuid}"$moduleid",
      keyR = "$ParentFolderId$Name",
      changeL = "$moduleid",
      changeR = "$Id",
      dataSource = ${mediasite_ds},
      dataSource {
        query {
          read {
            uri = ${mediasite_ds.url}"/Folders?$skip=0&$top="${limit_folders_read}
          }
        }
      }
    },
    t_owner_folder {
      type = "mergeTemplate",
      templates {
        folderhdr = ${mediasite_ds.url}"/Folders('${load_folder_uuid.item.Id}')/UpdateOwner",
        folderbody = "{ \"Owner\" : \"$presenterusername\" }"
      }
    },
    update_folder_owner {
      type = "lookup",
      behavior = "simple",
      dataSource = ${mediasite_ds},
      dataSource {
        query {
          read {
            verb = "post",
            uri = "folderhdr",
            body = "folderbody"
          }
        }
      }
    }
  }
  pipelines {
    create-module {
      pipe = "read-modules | dumpthis  | module-templates | dumpthis | create-module "
    },
    create-folder {
      pipe = "read-modules | dumpthis  | module-templates | create-folder | dumpthis  "
    },
    folder_owner {
      pipe = "read_module_owner | load_folder_uuid | dumpthis | t_owner_folder | update_folder_owner  "
    }
  },
  services {},
  startup {
    exec = "create-module"
  }
}