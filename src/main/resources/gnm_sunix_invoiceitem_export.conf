include "gnm_localenv.conf"

script {
  schema {},
  tasks {
    read-invoiceitem-dbf {
      type = "extract",
      behavior = "",
      dataSource = ${dbf_datasource},
      dataSource {
        filenameTemplate = "VACCITEM.DBF"
      }
    },
    filter {
      type = "transformTerm",
      term = "ds => batch(ds.filterNot(d => d.MODIFIED < today(-7)))"
    },
    template-lookup {
      type = "mergeTemplate",
      templates {
        lookupinvoice = "select sk,createddate,storesk,employeesk,customersk from invoice where invoiceid='"${store}"-$ACCNUM'",
        lookupproduct = "select sk from storeproduct where productid='"${store}"-${coalesce(blankAsNull(CODE),PAIDBY + \"-\" + ITEMCODE)}'"
      }
    },
    lookupinvoicekey {
      type = "lookup",
      dataSource = ${dwh_datasource},
      dataSource {
        query {
          read = "lookupinvoice"
        }
      }
    },
    lookupproductkey {
      type = "lookup",
      dataSource = ${dwh_datasource},
      dataSource {
        query {
          queryTemplate = "",
          read = "lookupproduct"
        }
      }
    },
    template-update {
      type = "mergeTemplate",
      templates {
        key = "${numeric(lookupinvoicekey(0)(0).sk)},${row.IPOS}",
        changeL = "${numeric(lookupproductkey(0)(0).sk)},${row.QTY},${row.ITEMAMT}",
        create = "insert into invoiceitem (invoicesk,pos,productsk,storesk,employeesk,serviceemployeesk,customersk,createddate,quantity,cost) values (${numeric(lookupinvoicekey(0)(0).sk)},${row.IPOS},${numeric(lookupproductkey(0)(0).sk)},${numeric(lookupinvoicekey(0)(0).storesk)},${numeric(lookupinvoicekey(0)(0).employeesk)},${numeric(lookupinvoicekey(0)(0).employeesk)},${numeric(lookupinvoicekey(0)(0).customersk)},'${orElse(lookupinvoicekey(0)(0).createddate,\"1900-01-01\")}'::timestamp,${row.QTY},${row.ITEMAMT})",
        update = "update invoiceitem set productsk=${numeric(lookupproductkey(0)(0).sk)},quantity=${row.QTY},cost=${row.ITEMAMT} where invoicesk=${numeric(lookupinvoicekey(0)(0).sk)} and pos=${row.IPOS}"
      }
    },
    update-invoiceitem-db {
      type = "datasourceupdate",
      iterateR = "ds => ds",
      keyL = "$key",
      keyR = "$invoicesk,$pos",
      changeL = "$changeL",
      changeR = "$productsk,$quantity,$cost",
      dataSource = ${dwh_datasource},
      dataSource {
        query {
          create = "create",
          read = "select invoicesk, pos, productsk, quantity, cost  FROM invoiceitem",
          update = "update"
        }
      }
    }
  },
  pipelines {
    incremental {
      pipe = "read-invoiceitem-dbf | filter | template-lookup | lookupinvoicekey | lookupproductkey | template-update | update-invoiceitem-db"
    },
    full {
      pipe = "read-invoiceitem-dbf | template-lookup | lookupinvoicekey | lookupproductkey | template-update | update-invoiceitem-db"
    }
  },
  services { },
  startup {
    exec = "incremental"
  }
}

