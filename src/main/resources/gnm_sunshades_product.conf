include "gnm_localenv.conf"

script {
  schema {},
  tasks {
    read-product-api {
      type = "extract",
      behavior = "",
      dataSource = ${sunshades_datasource},
      dataSource {
        query {
          read {
            uri = ${sunshades_datasource.base_uri}"/stock"
          }
        }
      }
    },
    pick-items {
      type = "transformTerm",
      term = "batch(items)"
    },
    product-template {
      type = "mergeTemplate",
      templates {
        update-uri = ${hub_datasource.base_uri}"/service/product/SUNSHADES/$stockid",
        update-body = "{\"alias_id\": \"$stockid\",\"alias_prefix\": \"SUNSHADES\",\"apn\": \"$apn\",\"attributes\": [{\"name\": \"frame_brand\",\"type\": \"string\",\"value\": \"$frame_brand\"},{\"name\": \"frame_bridge_size\",\"type\": \"string\",\"value\": \"$frame_bridge_size\"},{\"name\": \"frame_colour\",\"type\": \"string\",\"value\": \"$frame_colour\"},{\"name\": \"frame_depth\",\"type\": \"string\",\"value\": \"$frame_depth\"},{\"name\": \"frame_eye_size\",\"type\": \"string\",\"value\": \"$frame_eye_size\"},{\"name\": \"frame_gender\",\"type\": \"string\",\"value\": \"$frame_gender\"},{\"name\": \"frame_material\",\"type\": \"string\",\"value\": \"$frame_material\"},{\"name\": \"frame_model\",\"type\": \"string\",\"value\": \"$frame_model\"},{\"name\": \"frame_temple_length\",\"type\": \"string\",\"value\": \"$frame_temple_length\"},{\"name\": \"frame_type\",\"type\": \"string\",\"value\": \"$frame_type\"}],\"description\": \"$description\",\"discontinued\": $discontinued,\"name\": \"$stockid\",\"retail_price\": $retail_price,\"retail_price_tax\": $retail_price_tax,\"type\": \"frame\",\"wholesale_price\": $wholesale_price,\"wholesale_price_tax\": $wholesale_price_tax}"
      }
    },
    iterate {
      type = "transformTerm",
      term = "ds => ds"
    },
    update-product-api {
      type = "load",
      behavior = "update",
      dataSource = ${hub_datasource},
      dataSource {
        query {
          update {
            uri = "update-uri",
            body = "update-body"
          }
        }
      }
    }
  },
  pipelines {
    load-frame {
      pipe = "read-product-api | pick-items | product-template | iterate | update-product-api"
    }
  },
  services { },
  startup {
    exec = "load-frame"
  }
}

