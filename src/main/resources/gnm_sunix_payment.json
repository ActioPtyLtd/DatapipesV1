{
  "script": {
    "schema": {},
    "tasks": {
      "read-payment-csv": {
        "type": "extract",
        "behavior": "simple",
        "dataSource": {
          "behavior": "regex",
          "directory": "C:\\Users\\mauri\\bitbucket\\gandm-data\\Sunix\\HANSA",
          "type": "file",
          "filenameTemplate": "VPAYMENT.CSV.xls"
        }
      },
      "parse-payment-csv": {
        "type": "transform",
        "batch": [
          "addheader,col1",
          "split2cols,col1",
          "row1header",
          "const,HANSA",
          "trim,refnum",
          "concat,const1,payref,-",
          "concat,const1,refnum1,-",
          "concat,const1,optom,-",
          "convdate,paydate,MM/dd/yyyy,yyyy-MM-dd",
          "rename,concat1,externalref,accdate1,createddate,payamt,amount,paytype,paymenttype"]
      },
      "lookup-store": {
        "type": "lookup",
        "behavior": "lookup-merge",
        "lookup1": "const1",
        "lookup2": "code",
        "dataSource": {
          "type": "sql",
          "jdbcDriver": "org.postgresql.Driver",
          "connect": "jdbc:postgresql://localhost/test?user=postgres&password=postgres",
          "query": {
            "queryTemplate": "select id,code from store"
          }
        }
      },
      "lookup-customer": {
        "type": "lookup",
        "behavior": "lookup-merge",
        "lookup1": "concat2",
        "lookup2": "externalref",
        "dataSource": {
          "type": "sql",
          "jdbcDriver": "org.postgresql.Driver",
          "connect": "jdbc:postgresql://localhost/test?user=postgres&password=postgres",
          "query": {
            "queryTemplate": "select id,externalref from customer where externalref in ($1)"
          }
        }
      },
      "lookup-employee": {
        "type": "lookup",
        "behavior": "lookup-merge",
        "lookup1": "concat3",
        "lookup2": "externalref",
        "dataSource": {
          "type": "sql",
          "jdbcDriver": "org.postgresql.Driver",
          "connect": "jdbc:postgresql://localhost/test?user=postgres&password=postgres",
          "query": {
            "queryTemplate": "select id,externalref from employee where externalref in ($1)"
          }
        }
      },
      "prep-payment": {
        "type": "transform",
        "batch": [
          "defaultIfBlank,id1,id2,id3,0",
          "rename,id4,storeid,id5,customerid,id6,employeeid"
        ]
      },
      "update-payment-db": {
        "type": "datasourceupdate",
        "behavior": "",
        "keys": [
          "externalref"
        ],
        "dataSource": {
          "type": "sql",
          "behavior": "",
          "jdbcDriver": "org.postgresql.Driver",
          "connect": "jdbc:postgresql://localhost/test?user=postgres&password=postgres",
          "query": {
            "create": "insert into payment (externalref,createddate,paymenttype,storeid,customerid,employeeid,amount) values (@externalref,@createddate::timestamp,@paymenttype,@storeid::int,@customerid::int,@employeeid::int,@amount::money)",
            "read": "select * from payment",
            "update": "",
            "queryTemplate": ""
          }
        }
      }
    },
    "pipelines": {
      "load-payment" : {
        "pipe": "read-payment-csv | parse-payment-csv | lookup-store | lookup-customer | lookup-employee | prep-payment | update-payment-db"
      }
    },
    "services": { },
    "startup": {
      "exec": "load-payment"
    }
  }
}
