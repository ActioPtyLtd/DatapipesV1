include "jcu_localenv.conf"

script{
  schema{},
  tasks{
    get_users{
      type = "extract",
      behavior = "",
      dataSource = ${jcu_ds}
      dataSource{
        query{
          queryTemplate = "",
          read = "select distinct "${jcu_ds.sql_limit_return_result}" presenterusername,presenterfullname,ltrim(case when charindex(',',[PresenterFullname],0) = 0 then PresenterFullname else right(presenterfullname,len(presenterfullname)-charindex(',',[PresenterFullname],0)) end) firstname,case when charindex(',',[PresenterFullname],0) = 0 then 'n/a' else left (presenterfullname, charindex(',',[PresenterFullname],0)-1) end lastname,coalesce([PresenterEmail],PresenterUsername+'@jcu.edu.au') email from "${jcu_ds.sql_default_jcu_table}" where presenterUsername is not null "${jcu_ds.sql_extra_where_clause}" order by PresenterUsername desc"
        }
      }
    },
    t_create_user{
      type = "mergeTemplate",
      templates{
        createbody = "{ \"UserName\": \"$presenterusername\",\"DisplayName\": \"$presenterfullname\",\"Email\":\"$email\",\"Activated\": true,\"ModeratorEmail\": \"jmckinney_webcastcloud.com.au\",\"ModeratorEmailOptOut\": false,\"DisablePresentationContentCompleteEmails\": false,\"DisablePresentationContentFailedEmails\": true,\"DisablePresentationChangeOwnerEmails\": true,\"TimeZone\": 19,\"PresenterFirstName\": \"$firstname\",\"PresenterLastName\": \"$lastname\",\"PresenterEmail\": \"$email\" }"
      }
    },
    create_users : {
      type = "lookup",
      behavior = "simple",
      dataSource =  ${mediasite_ds},
      dataSource{
        query{
          read{
            verb = "post",
            uri = ${mediasite_ds.url}"/UserProfiles",
            body = "createbody"
          }
        }
      }
    }
  },
  pipelines {
    create_user {
      pipe = "get_users | t_create_user | create_users"
    },
    dump_user {
      pipe = "get_users | t_create_user | dumpthis"
    }
  },
  startup{
    exec = "dump_user"
  }
}

