
confPort = "9443"
confServer = "dev-api-datapipes.actio.com.au"

// Mediasite Data Source mapping
system_ds {
  type = "rest"
  behavior = "simple"
  path = "-"
  onError = ""
  query {
    onError = "exception"
  }
  headers {
    Authorization = "Basic YWRtaW46cGFzc3dvcmQ="
  }
  port = ${confPort}
  server = ${confServer}
  uri = "https://"${confServer}":"${confPort}
}

system_ds_hdr_api
  {
    headers {
      Accept = "application/vnd.api+json"
      Content-Type = "application/vnd.api+json"
    }
  }
system_ds_hdr
  {
    headers {
      Accept = "application/json"
      Content-Type = "application/json"
    }
  }

script {
  tasks {
    log_data {
      type = "dump"
    }
    to_value {
      type = "transformTerm"
      term = "ds => batch( ds.value )"
    }
  }
}

script {
  schema {}
  schedule {}
  system {}
  services {}
  startup {}
  tasks {
    t_create_config {
      type = "mergeTemplate"
      templates {
        sysbody = """{
                  "data": [
                    {
                      "type": "config",
                      "attributes": {
                        "name": "${configName}",
                        "description": "${configDescription}"
                      },
                      "relationships": {
                        "availableTasks": {
                          "data": []
                        },
                        "pipelines": {
                          "data": []
                        }
                      }
                    }
                  ]
                  }"""
      }
    }
    sys_create_config {
      type = "lookup"
      behavior = "simple"
      dataSource = ${system_ds}
      dataSource = ${system_ds_hdr_api}
      dataSource {
        onError = "exit"
        query {
          read {
            verb = "post"
            uri = ${system_ds.uri}"/api/config",
            body = "sysbody"
          }
        }
      }
    }
    t_sys_create_run_pipes {
      type = "mergeTemplate"
      templates {
        syshdr = ""
        sysbody = """{ "config_name" : "${configName}","run_id" : "${runId}"}"""
      }
    }
    sys_create_run_pipes {
      type = "lookup"
      dataSource = ${system_ds}
      dataSource = ${system_ds_hdr}
      dataSource {
        query {
          read {
            verb = "post"
            uri = ${system_ds.uri}"/service/run"
            body = "sysbody"
          }
        }
      }
    }
    t_sys_create_run_pipelines {
      type = "mergeTemplate"
      templates {
        syshdr = ""
        sysbody = """{ "config_name" : "${configName}","run_id": "${runId}","pipeline_run_id" : "${pipelineRunId}","pipeline_name" : "${pipelineName}"}"""
      }
    }
    sys_create_run_pipelines {
      type = "load"
      behavior = "simple"
      dataSource = ${system_ds}
      dataSource = ${system_ds_hdr}
      dataSource {
        query {
          create {
            uri = ${system_ds.uri}"/service/pipelineRun",
            body = "sysbody"
          }
        }
      }
    }
    t_sys_create_run_tasks {
      type = "mergeTemplate"
      templates {
        sysbody = """{
          "config_name" : "${configName}",
          "run_id": "${runId}",
          "pipeline_run_id" : "${pipelineRunId}",
          "task_run_id" : "${taskRunId}",
          "task_name" : "${taskName}"}"""
      }
    }
    sys_create_run_tasks {
      type = "load"
      behavior = "simple"
      dataSource = ${system_ds}
      dataSource = ${system_ds_hdr}
      dataSource {
        query {
          create {
            uri = ${system_ds.uri}"/service/taskRun",
            body = "sysbody"
          }
        }
      }
    }
    t_sys_load_events {
      type = "mergeTemplate"
      templates {
        eventsbody = """{  "event_id" : "${event_id}","config_name" : "${configName}","run_id": "${runId}","pipeline_run_id": "${pipeline_run_id}","task_run_id": "${task_run_id}","event_time" : "${event_time}","event_type" : "${event_type}","action_type" : "${action_type}","message" : "${message}","detail" : "${keyName}", "counterValue" : "${counter_value}", "counterLabel" : "${counter_label}", "counterTotal":"${counter_total}"}"""
      }
    }
    sys_load_events {
      type = "load"
      behavior = "simple"
      dataSource = ${system_ds}
      dataSource = ${system_ds_hdr}
      dataSource {
        query {
          create {
            uri = ${system_ds.uri}"/service/event",
            body = "eventsbody"
          }
        }
      }
    }
    t_get_config {
      type = "mergeTemplate"
      templates {
        syshdr = ${system_ds.uri}"/api/config?filter[config.name]=${configName}"
      }
    }
    get_config {
      type = "lookup"
      dataSource = ${system_ds}
      dataSource = ${system_ds_hdr_api}
      dataSource {
        query {
          read {
            verb = "get"
            uri = "syshdr"
          }
        }
      }
    }
    t_pipeline {
      type = "mergeTemplate"
      templates {
        sysbody = """{
          "data": [
            {
              "type": "pipeline",
              "attributes": {
                "name": "${record.pipelineName}",
                "source": "${record.source}",
                "destination": "${record.destination}"
              },
              "relationships": {
                "config": {
                  "data": {
                    "type": "config",
                    "id": "${get_config(0).data(0).id}"
                  }
                }
              }
            }
          ]
        }"""
      }
    }
    l_pipeline {
      type = "lookup"
      behavior = "simple"
      dataSource = ${system_ds}
      dataSource = ${system_ds_hdr_api}
      dataSource {
        onError = "exception"
        query {
          read {
            verb = "post"
            uri = ${system_ds.uri}"/api/pipeline",
            body = "sysbody"
          }
        }
      }
    }

    t_task {
      type = "mergeTemplate"
      templates {
        debug = "${record.taskName}${record.taskType}"
        taskbody = """{"data": [{
              "type": "task",
              "attributes": {
                "name": "${record.taskName}",
                "taskType": "${record.taskType}"
              },
              "relationships": {
                "config": {
                  "data": {
                    "type": "config",
                    "id": "${get_config(0).data(0).id}"
                  }
                }
              }
            }
          ]
        }"""
      }
    }
    l_task {
      type = "lookup"
      behavior = "simple"
      dataSource = ${system_ds}
      dataSource = ${system_ds_hdr_api}
      dataSource {
        onError = "exception"
        query {
          read {
            verb = "post"
            uri = ${system_ds.uri}"/api/task",
            body = "taskbody"
          }
        }
      }
    }
    t_seq {
      type = "mergeTemplate"
      templates {
        sysseq = """{
      "data": [
        {
          "type": "pipelineStage",
          "attributes": {
            "seq": "${record.record.record.seq}"
          },
          "relationships": {
            "pipeline": {
              "data": {
                "type": "pipeline",
                "id": "${j_pipe_to_task(0).data(0).id}"
              }
            },
            "task": {
              "data": {
                "type": "task",
                "id": "${record.l_task_load(0).data(0).id}"
              }
            }
          }
        }
      ]
      }"""
      }
    }
    l_seq {
      type = "lookup"
      behavior = "simple"
      dataSource = ${system_ds}
      dataSource = ${system_ds_hdr_api}
      dataSource {
        onError = "exception"
        query {
          read {
            verb = "post"
            uri = ${system_ds.uri}"/api/pipelineStage",
            body = "sysseq"
          }
        }
      }
    }
    t_pipe_to_task
      {
        type = "mergeTemplate"
        templates {
          joinHdr = ${system_ds.uri}"/api/pipeline?filter[pipeline.name]=${record.record.pipelineName}&filter[pipeline.config.name]=${record.record.configName}"
        }
      }
    j_pipe_to_task {
      type = "lookup",
      dataSource = ${system_ds}
      dataSource = ${system_ds_hdr_api}
      dataSource {
        onError = "exit"
        query {
          read {
            uri = "joinHdr"
          }
        }
      }
    }
    t_task_load
      {
        type = "mergeTemplate"
        templates {
          joinHdr = ${system_ds.uri}"/api/task?filter[task.name]=${record.taskName}&filter[task.config.name]=${record.configName}"
        }
      }
    l_task_load {
      type = "lookup",
      dataSource = ${system_ds}
      dataSource = ${system_ds_hdr_api}
      dataSource {
        onError = "exit"
        query {
          read {
            uri = "joinHdr"
          }
        }
      }
    }
    t_rename_config{
      type = "mergeTemplate"
      templates {
        renameHdr = ${system_ds.uri}"/api/config/${get_config(0).data(0).id}"
        renameBody = """{
                  "data":
                    {
                      "type" : "config",
                      "id" : "${get_config(0).data(0).id}",
                      "attributes": {
                        "name": "${record.configNamePostfix}",
                        "description": "${record.configDescription}"
                      }
                     }

                  }"""
      }
    }
    l_rename_config {
      type = "lookup",
      dataSource = ${system_ds}
      dataSource = ${system_ds_hdr_api}
      dataSource {
        onError = "exception"
        query {
          read {
            verb = "patch"
            body = "renameBody"
            uri = "renameHdr"
          }
        }
      }
    }
  }
  pipelines {
    sys_p_rename_config {
      pipe =  " t_get_config | get_config  | log_data | t_rename_config | l_rename_config ",
      onEmpty = "exit"
    }
    sys_p_create_config {
      pipe = " log_data | t_create_config | sys_create_config"
      onError = "exit"
    }
    sys_p_create_pipe {
      pipe = "t_get_config | get_config  | log_data | t_pipeline | l_pipeline "
    }
    sys_p_create_task {
      pipe = "t_get_config | get_config  | t_task | l_task | log_data "
    }
    sys_p_create_stages {
      pipe = "t_get_config | get_config  | t_task_load | l_task_load | log_data | t_pipe_to_task | j_pipe_to_task | log_data  |  t_seq  | l_seq "
    }
    sys_p_create_run {
      pipe = "t_sys_create_run_pipes | sys_create_run_pipes"
    }
    sys_p_create_run_pipelines {
      pipe = "t_sys_create_run_pipelines  | sys_create_run_pipelines"
    }
    sys_p_create_run_tasks {
      pipe = "log_data | t_sys_create_run_tasks | log_data  | sys_create_run_tasks"
    }
    sys_p_load_events {
      pipe = "t_sys_load_events | sys_load_events"
    }
  }
}

