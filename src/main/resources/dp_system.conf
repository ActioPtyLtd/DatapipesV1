
confPort = "9443"
confServer = "dev-api-datapipes.actio.com.au"

// Mediasite Data Source mapping
system_ds {
  type = "rest"
  behavior = "simple"
  path = "-"
  onError = "exception"
  query {
    onError = "exception"
  }
  headers {
    Accept="application/vnd.api+json"
    Content-Type = "application/vnd.api+json"
    Authorization = "Basic YWRtaW46cGFzc3dvcmQ="
  }
  port = ${confPort}
  server = ${confServer}
  uri = "https://"${confServer}":"${confPort}
}

script {
  tasks {
    log_data {
      type = "dump"
    }
    to_value {
      type = "transformTerm"
      term = "ds => batch( ds.value )"
    }
  }
}

script {
  schema {}
  schedule {}
  system {}
  services {}
  startup {}
  tasks {

    t_create_config {
      type = "mergeTemplate"
      templates {
        sysbody = """{
                  "data": [
                    {
                      "type": "config",
                      "attributes": {
                        "name": "${record.configName}",
                        "description": "${record.configDescription}"
                      },
                      "relationships": {
                        "availableTasks": {
                          "data": []
                        },
                        "pipelines": {
                          "data": []
                        }
                      }
                    }
                  ]
                  }"""
      }
    }

    sys_create_config {
      type = "lookup"
      behavior = "simple"
      dataSource = ${system_ds}
      dataSource {
        onError="exception"
        query {
          read {
            verb = "post"
            uri = ${system_ds.uri}"/api/config",
            body = "sysbody"
          }
        }
      }
    }

    t_sys_create_pipes {
      type = "mergeTemplate"
      templates {
        syshdr = ""
        sysbody = ""
      }
    }

    sys_create_pipes {
      type = "load"
      behavior = "simple"
      dataSource = ${system_ds}
      dataSource {
        query {
          create {
            uri = ${system_ds.uri}"/service/job/${d.item.local.id}/status",
            body = ""
          }
        }
      }
    }

    t_sys_create_tasks {
      type = "mergeTemplate"
      templates {
        syshdr = ""
        sysbody = "{\"data\": [{\"type\": \"config\",\"attributes\": {\"name\": \"JCU datapipes configuration\",\"description\": \"Defines all the datapipes and tasks that have been configured forJCU\"},\"relationships\": {\"availableTasks\": {\"data\": []},\"pipelines\": {\"data\": []}}}]}"
      }
    }
    sys_create_tasks {
      type = "load"
      behavior = "simple"
      dataSource = ${system_ds}
      dataSource {
        query {
          create {
            uri = ${system_ds.uri}"/service/job/${d.item.local.id}/status",
            body = ""
          }
        }
      }
    }
    t_sys_create_run_pipes {
      type = "mergeTemplate"
      templates {
        syshdr = ""
        sysbody = "{ \"config_name\" : \"Test Config\",\"run_id\" : \"${d}\"}"
      }
    }
    sys_create_run_pipes {
      type = "load"
      behavior = "simple"
      dataSource = ${system_ds}
      dataSource {
        query {
          create {
            uri = ${system_ds.uri}"/service/run"
            body = "sysbody"
          }
        }
      }
    }

    t_sys_create_run_pipelines {
      type = "mergeTemplate"
      templates {
        syshdr = ""
        sysbody = "{ \"config_name\" : \"Publish Lecture data to MediaSite\",\"run_id\": \"${d.runId}\",\"pipeline_run_id\" : \"${d.pipelineRunId}\",\"pipeline_name\" : \"${d.pipelineName}\"}"
      }
    }
    sys_create_run_pipelines {
      type = "load"
      behavior = "simple"
      dataSource = ${system_ds}
      dataSource {
        query {
          create {
            uri = ${system_ds.uri}"/service/pipelineRun",
            body = "sysbody"
          }
        }
      }
    }

    t_sys_create_run_tasks {
      type = "mergeTemplate"
      templates {
        syshdr = ""
        sysbody = "{\"data\": [{\"type\": \"config\",\"attributes\": {\"name\": \"JCU datapipes configuration\",\"description\": \"Defines all the datapipes and tasks that have been configured forJCU\"},\"relationships\": {\"availableTasks\": {\"data\": []},\"pipelines\": {\"data\": []}}}]}"
      }
    }
    sys_create_run_tasks {
      type = "load"
      behavior = "simple"
      dataSource = ${system_ds}
      dataSource {
        query {
          create {
            uri = ${system_ds.uri}"/service/taskRun",
            body = "{\"config_name\" : \"Publish Lecture data to MediaSite\",\"run_id\": \"${d.runId}\",\"pipeline_run_id\" : \"${d.pipelineRunId}\",\"task_run_id\" : \"${d.taskRunId}\",\"task_name\" : \"${d.taskName}\"}"
          }
        }
      }
    }

    sys_load_events {
      type = "lookup"
      behavior = "simple"
      dataSource = ${system_ds}
      dataSource {
        query {
          create {
            uri = ${system_ds.uri}"/service/event",
            body = "{  \"event_id\" : \"${d.event_id}\",\"config_name\" : \"Publish Lecture data to MediaSite\",\"run_id\": \"${d.runId}\",\"pipeline_run_id\": \"${d.pipeline_run_id}\",\"task_run_id\": \"${d.task_run_id}\",\"event_time\" : \"${d.event_time}\",\"event_type\" : \"${d.event_type}\",\"action_type\" : \"${d.action_type}\",\"message\" : \"${d.message}\",\"detail\" : \"${d.keyName}\"}"
          }
        }
      }
    }

    // check to see if the config exists already
    sys_load_from_config {
      type = "load"
      behavior = "simple"
      dataSource {
        type = "sysconfig"
      }
    }

    sys_load_from_events {
      type = "load"
      behavior = "simple"
      dataSource {
        type = "sysevents"
      }
    }
    t_get_config {
      type = "mergeTemplate"
      templates{
        syshdr =${system_ds.uri}"/api/config?filter[config.name]=${configName}"
        debug="${pipelineName}"
      }
    }
    get_config {
      type = "lookup"
      dataSource =  ${system_ds}
      dataSource {
        query {
          read {
            verb = "get"
            uri = "syshdr"
          }
        }
      }
    }
    t_pipeline {
      type = "mergeTemplate"
      templates{
        sysbody="""{
          "data": [
            {
              "type": "pipeline",
              "attributes": {
                "name": "${record.pipelineName}",
                "source": "not set",
                "destination": "not set"
              },
              "relationships": {
                "config": {
                  "data": {
                    "type": "config",
                    "id": "${get_config(0).data(0).id}"
                  }
                }
              }
            }
          ]
        }"""
      }
    }
    l_pipeline {
      type = "lookup"
      behavior = "simple"
      dataSource = ${system_ds}
      dataSource {
        onError="exception"
        query {
          read {
            verb = "post"
            uri = ${system_ds.uri}"/api/pipeline",
            body = "sysbody"
          }
        }
      }
    }
  }
  t_task {
    type = "mergeTemplate"
    templates{
      sysbody="""{
          "data": [
            {
              "type": "task",
              "attributes": {
                "name": "${record.taskName}",
                "taskType": "not set"
              },
              "relationships": {
                "config": {
                  "data": {
                    "type": "config",
                    "id": "${get_config(0).data(0).id}"
                  }
                }
              }
            }
          ]
        }"""
    }
  }
  l_task {
    type = "lookup"
    behavior = "simple"
    dataSource = ${system_ds}
    dataSource {
      onError="exception"
      query {
        read {
          verb = "post"
          uri = ${system_ds.uri}"/api/pipeline",
          body = "sysbody"
        }
      }
    }
  }
}
  pipelines {
    sys_p_create_config {
      pipe = " log_data | t_create_config |  log_data | sys_create_config"
      onError="abort"
    }
    sys_p_create_pipe {
      pipe = "t_get_config | get_config  | log_data | t_pipeline |  log_data | l_pipeline "
    }
    sys_p_create_pipe {
      pipe = "t_get_config | get_config  | log_data | t_task |  log_data | l_task "
    }
    sys_p_create_run {
      pipe = "t_sys_create_run_pipes | log_data | sys_create_run_pipes"
    }
    sys_p_create_run_pipelines {
      pipe = "t_sys_create_run_pipelines | log_data | sys_create_run_pipelines"
    }
    sys_p_create_run_tasks {
      pipe = "t_sys_create_run_tasks | log_data | sys_create_run_tasks"
    }
    sys_p_load_events {
      pipe = "sys_load_events"
    }
  }
}

