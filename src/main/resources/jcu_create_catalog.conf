include "jcu_localenv.conf"

script {
  schema {},
  tasks {

    read_modules {
      type = "extract",
      behavior = "",
      dataSource = ${jcu_ds},
      dataSource {
        query {
          queryTemplate = "",
          read = "select distinct "${jcu_ds.sql_limit_return_result}" moduleid from "${jcu_ds.sql_default_jcu_table}" where PresenterUsername is not null "${jcu_ds.sql_extra_where_clause}" order by moduleid"
        }
      }
    },
    load_folder_uuid {
      type = "join",
      behavior = "",
      iterateR = "ds => ds.value",
      keyL = ${parent_dir_uuid}"$moduleid",
      keyR = "$ParentFolderId$Name",
      changeL = "$moduleid",
      changeR = "$Id",
      dataSource = ${mediasite_ds},
      dataSource {
        query {
          read {
            uri = ${mediasite_ds.url}"/Folders?$skip=0&$top="${limit_folders_read}
          }
        }
      }
    },
    load_module_uuid {
      type = "join",
      behavior = "",
      iterateR = "ds => ds.value",
      keyL = "$moduleid",
      keyR = "$ModuleId",
      changeL = "$moduleid",
      changeR = "$Id",
      dataSource = ${mediasite_ds},
      dataSource {
        query {
          read {
            uri = ${mediasite_ds.url}"/Modules"
          }
        }
      }
    },
    module_uuid {
      type = "join",
      behavior = "",
      iterateR = "ds => ds.value",
      keyL = "${record.row.moduleid}",
      keyR = "$ModuleId",
      changeL = "${record.row.moduleid}",
      changeR = "$Id",
      dataSource = ${mediasite_ds},
      dataSource {
        query {
          read {
            uri = ${mediasite_ds.url}"/Modules",
          }
        }
      }
    },
    t_owner_catalog {
      type = "mergeTemplate",
      templates {
        assignownerhdr = ${mediasite_ds.url}"/ResourcePermissions('${create_schedule(0).Id}')",
        assignownerbody = "{\"Owner\" : ${row.presenterusername}, \"InheritPermissions\" : true}"
      }
    },
    assign_owner_catalog {
      type = "lookup",
      behavior = "simple",
      dataSource = ${mediasite_ds},
      dataSource {
        query {
          read {
            verb = "put",
            uri = "assignownerhdr",
            body = "assignownerbody"
          }
        }
      }
    },
    get_catalogs {
      type = "extract",
      behavior = "",
      dataSource = ${mediasite_ds},
      dataSource {
        query {
          read {
            verb = "get",
            uri = ${mediasite_ds.url}"/Catalogs?$skip=0&$top="${limit_catalogs_read}
          }
        }
      }
    },
    t_del_catalog {
      type = "mergeTemplate",
      templates {
        merge_del_hdr = ${mediasite_ds.url}"/Catalogs('${Id}')"
      }
    },
    process_delete_catalogs {
      type = "lookup",
      behavior = "simple",
      dataSource = ${mediasite_ds},
      dataSource {
        query {
          read {
            verb = "delete",
            uri = "merge_del_hdr",
            body = ""
          }
        }
      }
    },
    t_catalog {
      type = "mergeTemplate",
      templates {
        catabody = "{\"Name\" : \"$moduleid\",\"SearchTerm\":\"ModuleAssociations:$moduleid\",\"IsSearchBased\":true,\"LimitSearchToCatalog\":false}"
      }
    },
    setup_catalog {
      type = "lookup",
      behavior = "simple",
      dataSource = ${mediasite_ds},
      dataSource {
        query {
          read {
            verb = "post",
            uri = ${mediasite_ds.url}"/Catalogs",
            body = "catabody"
          }
        }
      }
    },
    t_catalog_put {
      type = "mergeTemplate",
      templates {
        catahdr_put = ${mediasite_ds.url}"/Catalogs/('${setup_catalog(0).Id}')/Settings",
        catabody_put = "{\"SearchFields\":\"All\",\"SearchTerm\":\"ModuleAssociations:${row.moduleid}\",\"DefaultSortBy\": 1,\"DefaultSortDirection\": 1}"
      }
    },
    set_catalog_search {
      type = "lookup",
      behavior = "simple",
      dataSource = ${mediasite_ds},
      dataSource {
        query {
          read {
            verb = "put",
            uri = "catahdr_put",
            body = "catabody_put"
          }
        }
      }
    },
    t_catalog_module {
      type = "mergeTemplate",
      templates {
        catamodhdr = ${mediasite_ds.url}"/Modules('${module_uuid.item.Id}')/AddAssociation",
        catamodbody = "{\"MediasiteId\" : \"${record.setup_catalog(0).Id}\" }"
      }
    },
    assign_catalog_module {
      type = "lookup",
      behavior = "simple",
      dataSource = ${mediasite_ds},
      dataSource {
        query {
          read {
            verb = "post",
            uri = "catamodhdr",
            body = "catamodbody"
          }
        }
      }
    }
    e_folders {
      type = "extract",
      behavior = "",
      dataSource = ${mediasite_ds},
      dataSource {
        query {
          read {
            uri = ${mediasite_ds.url}"/Folders?$skip=0&$top="${limit_folders_read}
          }
        }
      }
    }
    f_forparentfolder {
      type = "transformTerm"
      term = "ds => batch(ds.filter(d => d.ParentFolderId == \""${parent_dir_uuid}"\")) "
    }
    j_catalog {
      type = "join",
      iterateR = "ds => ds.value",
      keyL = "$Name",
      keyR = "$Name",
      changeL = "$Name",
      changeR = "$Name",
      dataSource = ${mediasite_ds},
      dataSource {
        query {
          read {
            uri = ${mediasite_ds.url}"/Catalogs?$skip=0&$top="${limit_catalogs_read}
          }
        }
      }
    }
    t_catalog_owner {
      type = "mergeTemplate",
      templates {
        hdr = ${mediasite_ds.url}"/ResourcePermissions('${j_catalog.item.Id}')",
        bdy = "{\"Owner\": \"${Owner}\",\"AccessControlList\": [{\"RoleId\": \""${permissions_role_uuid}"\",\"Read\": true,\"Write\": true,\"Execute\": true,\"Moderate\": true,\"Approve\": true,\"DenyRead\": false,\"DenyWrite\": false,\"DenyExecute\": false,\"DenyModerate\": false,\"DenyApprove\": false}]}"
      }
    }
    f_catalog_exclude_blank {
      type = "transformTerm"
      term = "ds => batch(ds.filterNot(d => d.j_catalog == \"\")) "
    }
    l_catalog_owner {
      type = "lookup",
      behavior = "simple",
      dataSource = ${mediasite_ds},
      dataSource {
        query {
          read {
            verb = "put",
            uri = "hdr",
            body = "bdy"
          }
        }
      }
    }
  }
  pipelines {
    create_catalogs {
      pipe = "read_modules | t_catalog | setup_catalog | dumpthis | t_catalog_put | set_catalog_search | module_uuid  | dumpthis | t_catalog_module | assign_catalog_module | dumpthis "
    }
    set_catalog_owner {
      pipe = " e_folders | tr1 | dumpthis | f_forparentfolder  | j_catalog |  f_catalog_exclude_blank | t_catalog_owner  | l_catalog_owner | dumpthis  "
    }
    delete_catalogs {
      pipe = " get_catalogs | tr1 | dumpthis | t_del_catalog | process_delete_catalogs "
    }
  }
  startup {
    exec = "set_catalog_owner"
  }

}

