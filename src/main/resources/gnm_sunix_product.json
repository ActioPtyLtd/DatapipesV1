{
  "script": {
    "schema": {},
    "tasks": {
      "read-frame-csv": {
        "type": "extract",
        "behavior": "simple",
        "dataSource": {
          "behavior": "regex",
          "directory": "C:\\Users\\mauri\\bitbucket\\gandm-data\\Sunix\\PHHEW",
          "type": "file",
          "filenameTemplate": "VFRAME.CSV"
        }
      },
      "parse-frame-csv": {
        "type": "transform",
        "batch": [
          "split2cols,col1",
          "row1header",
          "const,PHHEW,Frame,2016-05-01 00:00:00.0,PF,-,-",
          "concat,const1,const4,framenum,-",
          "concat,manufact,model,-",
          "split2colsd,size,-",
          "maporelse,sungrx,Y,Y,N,N,-",
          "rename,fcolour,frame_colour,frametype,frame_type,temple,temple_length,size1,eye_size,size2,bridge_size,sungrx1,rx,const5,gender,const6,material,manufact,brand",
          "jsonObject,frame_colour,model,frame_type,bridge_size,temple_length,eye_size,rx,depth,gender,material,brand",
          "rename,concat1,external_id,const2,type,concat2,name,framenum,description,listprice,wholesaleprice,rrp,retailprice,const3,datecreated,json1,extend",
          "keep,datecreated,type,external_id,name,wholesaleprice,retailprice,extend,description,quantity,const1"]
      },
      "read-contactlens-csv": {
        "type": "extract",
        "behavior": "simple",
        "dataSource": {
          "behavior": "regex",
          "directory": "C:\\Users\\mauri\\bitbucket\\gandm-data\\Sunix\\HAASC",
          "type": "file",
          "filenameTemplate": "VCLCODE.CSV.xls"
        }
      },
      "parse-contactlens-csv": {
        "type": "transform",
        "batch": [
          "addheader,col1",
          "split2cols,col1",
          "row1header",
          "const,HAASC,Contact Lens,1900-01-01 00:00:00.0,0.0000,PC",
          "concat,const1,const5,clcode,-",
          "rename,cltype,clens_type,design,clens_design,feature,clens_feature,material,clens_material,watercont,water_content,dia0,clens_diameter,wearday,wear_day,packsize,pack_size,tint,clens_tint",
          "jsonObject,clens_type,clens_design,clens_feature,clens_material,water_content,clens_diameter,wear_day,pack_size,clens_tint",
          "rename,concat1,external_id,const2,type,cldesc,description,clcode,name,const4,wholesaleprice,lensrrp,retailprice,const3,datecreated,json1,extend",
          "keep,datecreated,type,external_id,name,wholesaleprice,retailprice,extend,description"]
      },
      "read-speclens-csv": {
        "type": "extract",
        "behavior": "simple",
        "dataSource": {
          "behavior": "regex",
          "directory": "C:\\Users\\mauri\\bitbucket\\gandm-data\\Sunix\\HAASC",
          "type": "file",
          "filenameTemplate": "VLENCODE.CSV.xls"
        }
      },
      "parse-speclens-csv": {
        "type": "transform",
        "batch": [
          "addheader,col1",
          "split2cols,col1",
          "row1header",
          "const,HAASC,Spectacle Lens,1900-01-01 00:00:00.0,PL,,,,-",
          "concat,const1,const4,lencode,-",
          "rename,lensgroup,lens_group,type,lens_type,material,lens_material,lenssize,lens_width,const5,lens_colour,const6,lens_shape,const7,lens_usage",
          "jsonObject,lens_group,lens_type,lens_colour,lens_width,lens_material,lens_shape,lens_usage",
          "rename,concat1,external_id,const2,type,lencode,name,supdesc,description,costprice,wholesaleprice,rrp,retailprice,const3,datecreated,json1,extend",
          "keep,datecreated,type,external_id,name,wholesaleprice,retailprice,extend,description"]
      },
      "read-bulkbill-csv": {
        "type": "extract",
        "behavior": "simple",
        "dataSource": {
          "behavior": "regex",
          "directory": "C:\\Users\\mauri\\bitbucket\\gandm-data\\Sunix\\HAASC",
          "type": "file",
          "filenameTemplate": "VITEM.CSV.xls"
        }
      },
      "parse-bulkbill-csv": {
        "type": "transform",
        "batch": [
          "addheader,col1",
          "split2cols,col1",
          "row1header",
          "const,-,Bulk Bill,1900-01-01 00:00:00.0,0.0000",
          "concat,type,itemno,-",
          "rename,concat1,external_id,const2,type,descptn,name,const4,wholesaleprice,amount,retailprice,const3,datecreated",
          "keep,datecreated,type,external_id,name,wholesaleprice,retailprice"]
      },
      "read-sundry-csv": {
        "type": "extract",
        "behavior": "simple",
        "dataSource": {
          "behavior": "regex",
          "directory": "C:\\Users\\mauri\\bitbucket\\gandm-data\\Sunix\\HAASC",
          "type": "file",
          "filenameTemplate": "VPRODUCT.CSV.xls"
        }
      },
      "parse-sundry-csv": {
        "type": "transform",
        "batch": [
          "addheader,col1",
          "split2cols,col1",
          "row1header",
          "const,HAASC,Sundry,1900-01-01 00:00:00.0,0.0000,PS",
          "concat,const5,const1,prodcode,-",
          "rename,concat1,external_id,const2,type,desc,name,costprice,wholesaleprice,rrp,retailprice,const3,datecreated",
          "keep,datecreated,type,external_id,name,wholesaleprice,retailprice"]
      },
      "update-product-db": {
        "type": "datasourceupdate",
        "behavior": "",
        "keys": [
          "external_id"
        ],
        "dataSource": {
          "type": "sql",
          "behavior": "",
          "jdbcDriver": "org.postgresql.Driver",
          "connect": "jdbc:postgresql://localhost/test?user=postgres&password=postgres",
          "query": {
            "queryTemplate": "",
            "create": "insert into product (datecreated,\"type\",external_id,name,description,wholesaleprice,retailprice,extend) values (@datecreated::timestamp,@type,@external_id,@name,@description,@wholesaleprice::numeric,@retailprice::numeric,@extend::json)",
            "read": "SELECT productid, external_id, type, datecreated, name, description, retailprice, wholesaleprice, extend::text as extend FROM product",
            "update": "update product set datecreated=@datecreated::timestamp,\"type\"=@type,name=@name,description=@description,wholesaleprice=@wholesaleprice::numeric,retailprice=@retailprice::numeric,extend=@extend::json where external_id=@external_id"
          }
        }
      },
      "lookup-product": {
        "type": "lookup",
        "behavior": "lookup-merge",
        "lookup1": "external_id",
        "lookup2": "external_id",
        "dataSource": {
          "type": "sql",
          "jdbcDriver": "org.postgresql.Driver",
          "connect": "jdbc:postgresql://localhost/test?user=postgres&password=postgres",
          "query": {
            "queryTemplate": "select productid,external_id from product where external_id in ($1)"
          }
        }
      },
      "lookup-store": {
        "type": "lookup",
        "behavior": "lookup-merge",
        "lookup1": "const1",
        "lookup2": "code",
        "dataSource": {
          "type": "sql",
          "jdbcDriver": "org.postgresql.Driver",
          "connect": "jdbc:postgresql://localhost/test?user=postgres&password=postgres",
          "query": {
            "queryTemplate": "select id,code from store"
          }
        }
      },
      "prep-stock": {
        "type": "transform",
        "batch": [
          "defaultIfBlank,productid1,id1,quantity,wholesaleprice,retailprice,0",
          "rename,productid2,productid,id2,storeid,quantity1,quantity,wholesaleprice1,wholesaleprice,retailprice1,retailprice"
        ]
      },
      "load-stock-db": {
        "type": "load",
        "behavior": "",
        "dataSource": {
          "type": "sql",
          "behavior": "",
          "jdbcDriver": "org.postgresql.Driver",
          "connect": "jdbc:postgresql://localhost/test?user=postgres&password=postgres",
          "query": {
            "queryTemplate" : "",
            "create": "insert into stock (productid,storeid,quantity,datecreated,wholesaleprice,retailprice) values (@productid::int,@storeid::int,@quantity::int,@datecreated::date,@wholesaleprice::numeric,@retailprice::numeric)"
          }
        }
      }
    },
    "pipelines": {
      "load-frame" : {
        "pipe": "read-frame-csv | parse-frame-csv | update-product-db"
      },
      "load-contactlens" : {
        "pipe": "read-contactlens-csv | parse-contactlens-csv | update-product-db"
      },
      "load-speclens" : {
        "pipe": "read-speclens-csv | parse-speclens-csv | update-product-db"
      },
      "load-bulkbill" : {
        "pipe": "read-bulkbill-csv | parse-bulkbill-csv | update-product-db"
      },
      "load-sundry" : {
        "pipe": "read-sundry-csv | parse-sundry-csv | update-product-db"
      },
      "load-stock-frame" : {
        "pipe": "read-frame-csv | parse-frame-csv | lookup-product | lookup-store | prep-stock | load-stock-db"
      }
    },
    "services": { },
    "startup": {
      "exec": "load-frame"
    }
  }
}
