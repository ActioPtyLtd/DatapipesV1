include "gnm_localenv.conf"

script {
  schema {},
  tasks {
    read-lens-dbf {
      type = "extract",
      behavior = "",
      dataSource = ${dbf_datasource}
      dataSource {
        filenameTemplate = "VLENCODE.DBF"
      }
    },
    template {
      type = "mergeTemplate",
      templates {
        create = "insert into storeproduct (storeid,productid,\"type\",datecreated,name,description,retailprice,wholesaleprice,modified,last_purchase,last_sale,quantity) values ('"${store}"', '"${store}"-$LENCODE', 'Lens', current_date,'${sq(SUPDESC)}','$LENCODE',${numeric(RRP)},${numeric(COSTPRICE)}, '1900-01-01'::timestamp, '1900-01-01'::timestamp, '1900-01-01'::timestamp, 0)",
        update = "update storeproduct set name='${sq(SUPDESC)}',description='$LENCODE',retailprice=${numeric(RRP)},wholesaleprice=${numeric(COSTPRICE)}, modified='1900-01-01'::timestamp, last_purchase='1900-01-01'::timestamp, last_sale='1900-01-01'::timestamp,quantity=0 WHERE productid='"${store}"-$LENCODE'"
      }
    },
    update-product-db {
      type = "datasourceupdate",
      iterateR = "ds => ds",
      keyL = ${store}"-${row.LENCODE}",
      keyR = "$productid",
      changeL = "-",
      changeR = "-",
      dataSource = ${dwh_datasource},
      dataSource {
        query {
          create = "create",
          read = "select productid, modified FROM storeproduct",
          update = "update"
        }
      }
    }
  },
  pipelines {
    load-lens {
      pipe = "read-lens-dbf | template | update-product-db"
    }
  },
  services { },
  startup {
    exec = "load-lens"
  }
}
